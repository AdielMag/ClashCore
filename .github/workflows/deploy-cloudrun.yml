name: Deploy to Cloud Run

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'src/MyApp.Unity/**'

  workflow_dispatch:

env:
  REGION: us-central1
  PROJECT_ID: clashcore

  # Clashcore Services
  SERVICES_IMAGE_NAME: clashcore-services
  SERVICES_REPO_NAME: clashcore
  SERVICES_SERVICE_NAME: clashcore-services

  # Gamehub Service
  GAMEHUB_IMAGE_NAME: clashcore-gamehub
  GAMEHUB_REPO_NAME: clashcore

  # Jobs
  JOBS_IMAGE_NAME: clashcore-jobs
  JOBS_REPO_NAME: clashcore
  JOBS_JOB_NAME: admin-jobs

  RUNTIME_SA: cloudrun-runtime@clashcore.iam.gserviceaccount.com

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      services-changed: ${{ steps.changes.outputs.services }}
      gamehub-changed: ${{ steps.changes.outputs.gamehub }}
      jobs-changed: ${{ steps.changes.outputs.jobs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for changes
        id: changes
        run: |
          # Get changed files
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check for shared/common dependencies
          SHARED_CHANGED=$(echo "$CHANGED_FILES" | grep -E "^src/MyApp\.(Shared|Server\.Common)/" || true)
          
          # Check for services changes
          SERVICES_CHANGED=$(echo "$CHANGED_FILES" | grep "^src/MyApp.Server.Services/" || true)
          
          # Check for gamehub changes  
          GAMEHUB_CHANGED=$(echo "$CHANGED_FILES" | grep "^src/MyApp.Server.GameHub/" || true)
          
          # Check for jobs changes
          JOBS_CHANGED=$(echo "$CHANGED_FILES" | grep "^src/MyApp.Server.Jobs/" || true)
          
          # Services should build if services OR shared/common changed
          if [[ -n "$SERVICES_CHANGED" || -n "$SHARED_CHANGED" ]]; then
            echo "services=true" >> $GITHUB_OUTPUT
            echo "Services build triggered - Services changed: $([[ -n "$SERVICES_CHANGED" ]] && echo "yes" || echo "no"), Shared/Common changed: $([[ -n "$SHARED_CHANGED" ]] && echo "yes" || echo "no")"
          else
            echo "services=false" >> $GITHUB_OUTPUT
            echo "No services build needed"
          fi
          
          # GameHub should build if gamehub OR shared/common changed
          if [[ -n "$GAMEHUB_CHANGED" || -n "$SHARED_CHANGED" ]]; then
            echo "gamehub=true" >> $GITHUB_OUTPUT
            echo "GameHub build triggered - GameHub changed: $([[ -n "$GAMEHUB_CHANGED" ]] && echo "yes" || echo "no"), Shared/Common changed: $([[ -n "$SHARED_CHANGED" ]] && echo "yes" || echo "no")"
          else
            echo "gamehub=false" >> $GITHUB_OUTPUT
            echo "No GameHub build needed"
          fi
          
          # Jobs should build if jobs OR shared/common changed
          if [[ -n "$JOBS_CHANGED" || -n "$SHARED_CHANGED" ]]; then
            echo "jobs=true" >> $GITHUB_OUTPUT
            echo "Jobs build triggered - Jobs changed: $([[ -n "$JOBS_CHANGED" ]] && echo "yes" || echo "no"), Shared/Common changed: $([[ -n "$SHARED_CHANGED" ]] && echo "yes" || echo "no")"
          else
            echo "jobs=false" >> $GITHUB_OUTPUT
            echo "No Jobs build needed"
          fi

  build-push-services:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.services-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI (lightweight)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push clashcore-services Docker image
        run: |
          docker build -f Dockerfile-deploy.services \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICES_REPO_NAME }}/${{ env.SERVICES_IMAGE_NAME }}:latest .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICES_REPO_NAME }}/${{ env.SERVICES_IMAGE_NAME }}:latest

  deploy-services:
    runs-on: ubuntu-latest
    needs: build-push-services

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Deploy clashcore-services to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICES_SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICES_REPO_NAME }}/${{ env.SERVICES_IMAGE_NAME }}:latest \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --use-http2 \
            --service-account=${{ env.RUNTIME_SA }} \
            --set-env-vars=MONGO_DB_CONNECTION_STRING=${{ secrets.MONGO_DB_CONNECTION_STRING }}

  build-push-jobs:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.jobs-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: "beta"

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push clashcore-jobs Docker image
        run: |
          docker build --no-cache -f Dockerfile-jobs \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOBS_REPO_NAME }}/${{ env.JOBS_IMAGE_NAME }}:latest .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOBS_REPO_NAME }}/${{ env.JOBS_IMAGE_NAME }}:latest

  deploy-jobs:
    runs-on: ubuntu-latest
    needs: build-push-jobs

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: "beta"
      
      - name: Create or update Cloud Run Job
        run: |
          # Check if job exists, create if it doesn't
          if ! gcloud run jobs describe ${{ env.JOBS_JOB_NAME }} --region=${{ env.REGION }} >/dev/null 2>&1; then
            echo "Creating Cloud Run Job..."
            gcloud run jobs create ${{ env.JOBS_JOB_NAME }} \
              --image="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOBS_REPO_NAME }}/${{ env.JOBS_IMAGE_NAME }}:latest" \
              --region="${{ env.REGION }}" \
              --service-account="${{ env.RUNTIME_SA }}" \
              --set-env-vars="MONGO_DB_CONNECTION_STRING=${{ secrets.MONGO_DB_CONNECTION_STRING }}" \
              --max-retries=1 \
              --parallelism=1 \
              --cpu=1 \
              --memory=512Mi
          else
            echo "Updating existing Cloud Run Job..."
            gcloud run jobs update ${{ env.JOBS_JOB_NAME }} \
              --image="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.JOBS_REPO_NAME }}/${{ env.JOBS_IMAGE_NAME }}:latest" \
              --region="${{ env.REGION }}"
          fi
          
  build-push-gamehub:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.gamehub-changed == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: "beta"

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push clashcore-gamehub Docker image
        run: |
          docker build -f Dockerfile-deploy.gamehub \
            -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAMEHUB_REPO_NAME }}/${{ env.GAMEHUB_IMAGE_NAME }}:latest .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAMEHUB_REPO_NAME }}/${{ env.GAMEHUB_IMAGE_NAME }}:latest

  invalidate-matches:
    runs-on: ubuntu-latest
    needs: [check-changes, build-push-gamehub]
    if: needs.check-changes.outputs.gamehub-changed == 'true'

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: "beta"

      - name: Invalidate active matches after GameHub update
        run: |
          # Execute the invalidation job
          echo "Executing match invalidation job..."
          gcloud run jobs execute ${{ env.JOBS_JOB_NAME }} \
            --region ${{ env.REGION }} \
            --args="invalidate-matches" \
            --wait || echo "Warning: Failed to invalidate matches, but continuing deployment"
